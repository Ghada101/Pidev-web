<?php //App%255CEntity%255CAgency%2524numberofavailablecars

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\LessThanOrEqual'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\LessThanOrEqual')),
        clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'numberOfAvailableCars',
            ],
            'type' => [
                'integer',
            ],
            'precision' => [
                null,
            ],
            'scale' => [
                null,
            ],
            'message' => [
                1 => ' number of available cars required',
                'Number of available cars must be less than or equal to number of cars',
            ],
            'groups' => [
                1 => [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
            'propertyPath' => [
                2 => 'numberofcars',
            ],
        ],
        'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
            'groups' => [
                3 => [
                    'Agency',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
    ],
    []
); }];
